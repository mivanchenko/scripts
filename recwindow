#!/bin/bash
# Window Recorder v3.1 2013-12-06 by Michael Ivanchenko (perlino.blogspot.com)
# http://linuxhub.ru/viewtopic.php?f=23&p=404
# Copyright (c) 2013 by Poltavchenko Dmitriy <zen@root.ua>
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# Usage:
#     Start recording:
#         ./recwindow, click on window
#     Stop recording:
#         ./recwindow
# Create a panel icon to click for record, click for stop

VIDEO_DIR=~/Video
VIDEO_FILE="$(date '+%F_%H%M%S')"
VIDEO_EXT=mkv

VIDEO_PATH="$VIDEO_DIR/$VIDEO_FILE.$VIDEO_EXT"
VIDEO_NAME="$VIDEO_DIR/$VIDEO_FILE"
PID_FILE=$0.pid
NAM_FILE=$0.nam

function require () {
	for i in $@
	do
		if [[ -z $(which $i) ]]
		then
			echo "ERROR: $i not found" 1>&2
		exit 1
		fi
	done
}
function parseWinInfo () {
	PARAMS="$@"
	ENCODER_OPT_TPL='XWxYH -i :0.0+XOFF,YOFF'
	VAL=('XOFF' 'YOFF' 'XW' 'YH')
	for i in $PARAMS
	do
		TMP=$i
		if [[ ($NUM -ge 2) && ($(( $TMP % 2 )) != 0) ]]
		then
			TMP=$(( $TMP + 1 ))
		fi
		ENCODER_OPT_TPL=$(echo $ENCODER_OPT_TPL | sed "s/${VAL[$NUM]}/$TMP/g")
		NUM=$(( $NUM + 1 ))
	done
	echo $ENCODER_OPT_TPL
}
function getWinInfo () {
	PARAMS=$(xwininfo -frame | egrep 'Absolute|Width|Height' | awk -F: '{print $2}')
	if [[ -z $PARAMS ]]
	then
		echo 'Cannot get windows properties'
		exit 2
	fi
	echo $PARAMS
}
function start () {
	REGION=$(parseWinInfo $(getWinInfo))
	ffmpeg -f alsa -i pulse -f x11grab -framerate 24 -show_region 1 \
		-threads 4 -q 1 -bt 8000000 -b 8500000 -y -video_size $REGION \
		$VIDEO_PATH & echo $! > $PID_FILE
	echo $VIDEO_NAME > $NAM_FILE
}
function stop () {
	kill -SIGQUIT $PID
	rm -f $PID_FILE
	VIDEO_NAME=$(cat $NAM_FILE 2>/dev/null)
	VIDEO_PATH="$VIDEO_NAME.$VIDEO_EXT"
	VIDEO_PATH_MP4="$VIDEO_NAME.mp4"
	ffmpeg -i $VIDEO_PATH -acodec mp2 $VIDEO_PATH_MP4
	if [ -e $VIDEO_PATH_MP4 ]
	then
		notify-send "Converted" "$VIDEO_PATH_MP4"
	fi
	rm -f $NAM_FILE
}
require notify-send xwininfo nice egrep awk sed date
PID=$(pgrep -F $PID_FILE 2> /dev/null)
if [ -z $PID ]
then
	start
else
	stop
fi
